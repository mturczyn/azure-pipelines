parameters:
- name: environmentType
  type: string
- name: connectedServiceName
  type: string
  default: AzurePipelines
- name: ResourceGroupName
  type: string
  default: intrinsic-rg

stages:
- stage: Deploy_${{parameters.environmentType}}
  displayName: Deploy (${{parameters.environmentType}} Environment)
  jobs:
  - deployment: DeployWebsite
    displayName: Deploy website
    pool:
      vmImage: ubuntu-latest
    environment: ${{parameters.environmentType}}
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            
            - task: AzureResourceManagerTemplateDeployment@3
              name: DeployBicepFile
              displayName: Deploy Bicep file
              inputs:
                connectedServiceName: ${{parameters.connectedServiceName}}
                deploymentName: $(Build.BuildNumber)
                location: 'centralpoland'
                resourceGroupName: ${{parameters.ResourceGroupName}}
                csmFile: build-application-and-deploy-pipeline/website.bicep
                overrideParameters: >
                  -environmentType ${{parameters.environmentType}}
                deploymentOutputs: deploymentOutputs

            - bash: |
                echo "##vso[task.setvariable variable=appServiceAppHostName;isoutput=true]$(echo $DEPLOYMENT_OUTPUTS | jq -r '.appServiceAppHostName.value')"
                echo "##vso[task.setvariable variable=appServiceAppName;isoutput=true]$(echo $DEPLOYMENT_OUTPUTS | jq -r '.appServiceAppName.value')"
              name: SaveDeploymentOutputs
              displayName: Save deployment outputs into variables
              env:
                DEPLOYMENT_OUTPUTS: $(deploymentOutputs)

            - task: AzureRmWebAppDeployment@4
              name: DeployWebsiteApp
              displayName: Deploy website
              inputs:
                appType: webApp
                ConnectionType: AzureRM
                azureSubscription: ${{parameters.connectedServiceName}}
                ResourceGroupName: ${{parameters.ResourceGroupName}}
                WebAppName: $(SaveDeploymentOutputs.appServiceAppName)
                Package: '$(Pipeline.Workspace)/website/publish.zip'
    
  - job: SmokeTest
    displayName: Smoke test with Smoke Testing from powershell script with Pester (unit testing framework for powershell)
    variables:
      appServiceAppHostName: $[ dependencies.DeployWebsite.outputs['DeployWebsite.SaveDeploymentOutputs.appServiceAppHostName'] ]
    steps:
      - task: PowerShell@2
        name: RunSmokeTests
        displayName: Run smoke tests
        inputs:
          targetType: inline
          script: |
            $container = New-PesterContainer `
              -Path 'build-application-and-deploy-pipeline/Website.SmokeTest.ps1' `
              -Data @{ HostName = '$(appServiceAppHostName)' }
            Invoke-Pester `
              -Container $container `
              -CI
      - task: PublishTestResults@2
        name: PublishTestResults
        displayName: Publish test results
        condition: always()
        inputs:
          testResultsFormat: NUnit
          testResultsFiles: 'testResults.xml'
